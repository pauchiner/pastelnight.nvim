name: Continuous Integration
on: 
  - push
  - pull_request
jobs:
  extras:
    name: ðŸŽ¨ Extras
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
        - name: Install Neovim
          shell: bash
          run: |
            mkdir -p /tmp/nvim
            wget -q https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage -O /tmp/nvim/nvim.appimage
            cd /tmp/nvim
            chmod a+x ./nvim.appimage
            ./nvim.appimage --appimage-extract
            echo "/tmp/nvim/squashfs-root/usr/bin/" >> $GITHUB_PATH
        - uses: actions/checkout@v3
        - name: Build Extras
          run: |
            nvim -u NONE -E -R --headless --cmd "set rtp^=." --cmd "packloadall" --cmd "lua require('pastelnight.extra').setup()" --cmd qa
        - name: Push changes
          uses: stefanzweifel/git-auto-commit-action@v4
          with:
            commit_message: "chore(build): auto-generate extras"
            commit_user_name: "github-actions[bot]"
            commit_user_email: "github-actions[bot]@users.noreply.github.com"
            commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
            token: ${{ secrets.GITHUB_TOKEN }}
  tests:
    name: ðŸ§ª Tests
    needs: extras
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Neovim
        shell: bash
        run: |
          mkdir -p /tmp/nvim
          wget -q https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage -O /tmp/nvim/nvim.appimage
          cd /tmp/nvim
          chmod a+x ./nvim.appimage
          ./nvim.appimage --appimage-extract
          echo "/tmp/nvim/squashfs-root/usr/bin/" >> $GITHUB_PATH
      - name: Run Tests
        run: |
          nvim --version
          [ ! -d tests ] && exit 0
          nvim --headless -u tests/init.lua -c "PlenaryBustedDirectory tests/ {minimal_init = 'tests/init.lua', sequential = true}"
  style:
    needs: tests
    name: ðŸ’… Styles
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: JohnnyMorganz/stylua-action@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --check lua/
          version: latest
